comics
# Check levels of align
levels(comics$align)
# Check the levels of gender
levels(comics$gender)
# Create a 2-way contingency table
table(comics$align, comics$gender)
comics
# Check levels of align
levels(comics$align)
# Check the levels of gender
levels(comics$gender)
# Create a 2-way contingency table
tab <- table(comics$align, comics$gender)
tab
tab
# Remove align level
comics <- comics %>%
filter(align != "Reformed Criminals") %>%
droplevels()
# Load dplyr
library(dplyr)
tab
# Remove align level
comics <- comics %>%
filter(align != "Reformed Criminals") %>%
droplevels()
comics
table(comics$align, comics$gender)
#download.file(url, "comics.csv")
#install.packages("dplyr")
install.packages("ggplot2")
# Load ggplot2
library("ggplot2")
# Create side-by-side barchart of gender by alignment
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar(position = "dodge")
# Create side-by-side barchart of alignment by gender
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))
library("ggplot2")
# Create side-by-side barchart of gender by alignment
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar(position = "dodge")
# Create side-by-side barchart of alignment by gender
ggplot(comics, aes(x = gender, fill = align)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))
# Plot of gender by align
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar()
# Plot proportion of gender, conditional on align
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar(position = "fill") +
ylab("proportion")
# Change the order of the levels in align
comics$align <- factor(comics$align,
levels = c("Bad", "Neutral", "Good"))
# Create plot of align
ggplot(comics, aes(x = align)) +
geom_bar()
# Plot of alignment broken down by gender
ggplot(comics, aes(x = align)) +
geom_bar() +
facet_wrap(~ gender)
flavor <- rep(c("cherry", "key lime", "boston creme", "strawberry",
"blueberry", "apple", "pumpkin"),
c(13, 16, 15, 11, 14, 17, 12))
pies <- data.frame(flavor = as.factor(flavor))
cnt <- count(pies, flavor)
ggplot(cnt, aes(x = "", y = n, fill = flavor)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = pi / 3) +
xlab("") +
ylab("") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Put levels of flavor in decending order
lev <- c("apple", "key lime", "boston creme", "blueberry", "cherry", "pumpkin", "strawberry")
pies$flavor <- factor(pies$flavor, levels = lev)
# Create barchart of flavor
ggplot(pies, aes(x = flavor)) +
geom_bar(fill = "chartreuse") +
theme(axis.text.x = element_text(angle = 90))
cars
library("cars")
load(cars)
cars
# Learn data structure
str(cars)
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1796/datasets/cars04.csv"
download.file(url, "cars04.csv")
cars <- read.csv("cars04.csv")
View(cars)
library(mtcars)
library(datasets)
mtcars
data("mtcars")
cars
library(datasets)
data("mtcars")
# Load package
library("ggplot2")
# Learn data structure
str(cars)
ggplot(cars, aes(x = city_mpg)) +
geom_histogram() +
facet_wrap(~ suv)
# Filter cars with 4, 6, 8 cylinders
common_cyl <- filter(cars, cars$ncyl %in% c(4,6,8))
# Create box plots of city mpg by ncyl
ggplot(common_cyl, aes(x = as.factor(ncyl), y = city_mpg)) +
geom_boxplot()
# Create overlaid density plots for same data
ggplot(common_cyl, aes(x = city_mpg, fill = as.factor(ncyl))) +
geom_density(alpha = .3)
# Create hist of horsepwr
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram() +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr for affordable cars
cars %>%
filter(msrp<25000) %>%
ggplot(aes(horsepwr)) +
geom_histogram() +
xlim(c(90, 550)) +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr with binwidth of 3
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram(binwidth = 3) +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr with binwidth of 30
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram(binwidth = 30) +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr with binwidth of 60
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram(binwidth = 60) +
ggtitle("Distribution of Horse Power")
# Construct box plot of msrp
cars %>%
ggplot(aes(x = 1, y = msrp)) +
geom_boxplot()
# Exclude outliers from data
cars_no_out <- cars %>%
filter(msrp <100000)
# Construct box plot of msrp using the reduced dataset
cars_no_out %>%
ggplot(aes(x = 1, y = msrp)) +
geom_boxplot()
# Create plot of city_mpg
cars %>%
ggplot(aes(x = 1, y = city_mpg)) +
geom_boxplot()
# Create plot of width
cars %>%
ggplot(aes(x = width)) +
geom_density()
common_cyl %>%
ggplot(aes(x = hwy_mpg)) +
geom_histogram() +
facet_grid(ncyl ~ suv, labeller = label_both) +
ggtitle("ncyl vs suv")
glimpse(common_cyl)
?gapminder
#download.file(url, "comics.csv")
#install.packages("dplyr")
#install.packages("ggplot2")
install.packages("gapminder")
library("gapminder")
load(gapminder)
load("gapminder")
library("gapminder")
gapminder
library("gapminder")
# Create dataset of 2007 data
gap2007 <- filter(gapminder, year==2007)
# Compute groupwise mean and median lifeExp
gap2007 %>%
group_by(continent) %>%
summarize(mean(lifeExp),
median(lifeExp))
# Generate box plots of lifeExp for each continent
gap2007 %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot()
# Compute groupwise measures of spread
gap2007 %>%
group_by(continent) %>%
summarize(sd(lifeExp),
IQR(lifeExp),
n())
# Generate overlaid density plots
gap2007 %>%
ggplot(aes(x = lifeExp, fill = continent)) +
geom_density(alpha = 0.3)
library(dplyr)
library(ggplot2)
library(gapminder)
gap2007 <- filter(gapminder, year == 2007)
np1 <- gap2007 %>%
filter(continent == "Americas") %>%
ggplot(aes(x = lifeExp)) +
geom_density() +
ggtitle("Life Expectancy in the Americas")
# skewed
p2 <- gap2007 %>%
ggplot(aes(x = pop)) +
geom_density() +
ggtitle("Country-Level Population")
library(gridExtra)
gap2007 <- filter(gapminder, year == 2007)
p1 <- gap2007 %>%
filter(continent == "Americas") %>%
ggplot(aes(x = lifeExp)) +
geom_density() +
ggtitle("Life Expectancy in the Americas")
# skewed
p2 <- gap2007 %>%
ggplot(aes(x = pop)) +
geom_density() +
ggtitle("Country-Level Population")
install.packages("gridExtra")
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
# Compute stats for lifeExp in Americas
gap2007 %>%
filter(continent == "Americas") %>%
summarize(mean(lifeExp),
sd(lifeExp))
# Compute stats for population
gap2007 %>%
summarize(median (pop),
IQR(pop))
# Create density plot of old variable
gap2007 %>%
ggplot(aes(x = pop)) +
geom_density()
# Transform the skewed pop variable
gap2007 <- gap2007 %>%
mutate(log_pop= log(pop))
# Create density plot of new variable
gap2007 %>%
ggplot(aes(x = log_pop)) +
geom_density()
gap2007 <- filter(gapminder, year == 2007)
gap2007 %>%
filter(continent == "Asia") %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
# Filter for Asia, add column indicating outliers
gap_asia <- gap2007 %>%
filter(continent=="Asia") %>%
mutate(is_outlier = lifeExp<50)
# Remove outliers, create box plot of lifeExp
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
packrat::snapshot()
packrat::snapshot()
install.packages("BH")
packrat::snapshot()
#pre exercise code
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1796/datasets/comics.csv"
#download.file(url, "comics.csv")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("gapminder")
#install.packages("gridExtra")
#dataframe
comics <- read.csv("comics.csv", stringsAsFactors = TRUE)
# Print the first rows of the data
comics
# Check levels of align
levels(comics$align)
# Check the levels of gender
levels(comics$gender)
# Create a 2-way contingency table
tab <- table(comics$align, comics$gender)
tab
# Load dplyr
library(dplyr)
# Print tab
tab
# Remove align level
comics <- comics %>%
filter(align != "Reformed Criminals") %>%
droplevels()
table(comics$align, comics$gender)
# Load ggplot2
library("ggplot2")
# Create side-by-side barchart of gender by alignment
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar(position = "dodge")
# Create side-by-side barchart of alignment by gender
ggplot(comics, aes(x = gender, fill = align)) +
geom_bar(position = "dodge") +
theme(axis.text.x = element_text(angle = 90))
# Plot of gender by align
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar()
# Plot proportion of gender, conditional on align
ggplot(comics, aes(x = align, fill = gender)) +
geom_bar(position = "fill") +
ylab("proportion")
# Change the order of the levels in align
comics$align <- factor(comics$align,
levels = c("Bad", "Neutral", "Good"))
# Create plot of align
ggplot(comics, aes(x = align)) +
geom_bar()
# Plot of alignment broken down by gender
ggplot(comics, aes(x = align)) +
geom_bar() +
facet_wrap(~ gender)
#pre_code
flavor <- rep(c("cherry", "key lime", "boston creme", "strawberry",
"blueberry", "apple", "pumpkin"),
c(13, 16, 15, 11, 14, 17, 12))
pies <- data.frame(flavor = as.factor(flavor))
cnt <- count(pies, flavor)
ggplot(cnt, aes(x = "", y = n, fill = flavor)) +
geom_bar(width = 1, stat = "identity") +
coord_polar("y", start = pi / 3) +
xlab("") +
ylab("") +
theme(panel.grid.minor = element_blank(),
panel.grid.major = element_blank(),
axis.ticks = element_blank(),
axis.text = element_blank())
# Put levels of flavor in decending order
lev <- c("apple", "key lime", "boston creme", "blueberry", "cherry", "pumpkin", "strawberry")
pies$flavor <- factor(pies$flavor, levels = lev)
# Create barchart of flavor
ggplot(pies, aes(x = flavor)) +
geom_bar(fill = "chartreuse") +
theme(axis.text.x = element_text(angle = 90))
library(datasets)
data("mtcars")
# Load package
library("ggplot2")
# Learn data structure
str(cars)
# Create faceted histogram
ggplot(cars, aes(x = city_mpg)) +
geom_histogram() +
facet_wrap(~ suv)
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1796/datasets/cars04.csv"
download.file(url, "cars04.csv")
cars <- read.csv("cars04.csv")
# Filter cars with 4, 6, 8 cylinders
common_cyl <- filter(cars, cars$ncyl %in% c(4,6,8))
# Create box plots of city mpg by ncyl
ggplot(common_cyl, aes(x = as.factor(ncyl), y = city_mpg)) +
geom_boxplot()
# Create overlaid density plots for same data
ggplot(common_cyl, aes(x = city_mpg, fill = as.factor(ncyl))) +
geom_density(alpha = .3)
# Create hist of horsepwr
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram() +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr for affordable cars
cars %>%
filter(msrp<25000) %>%
ggplot(aes(horsepwr)) +
geom_histogram() +
xlim(c(90, 550)) +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr with binwidth of 3
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram(binwidth = 3) +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr with binwidth of 30
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram(binwidth = 30) +
ggtitle("Distribution of Horse Power")
# Create hist of horsepwr with binwidth of 60
cars %>%
ggplot(aes(horsepwr)) +
geom_histogram(binwidth = 60) +
ggtitle("Distribution of Horse Power")
# Construct box plot of msrp
cars %>%
ggplot(aes(x = 1, y = msrp)) +
geom_boxplot()
# Exclude outliers from data
cars_no_out <- cars %>%
filter(msrp <100000)
# Construct box plot of msrp using the reduced dataset
cars_no_out %>%
ggplot(aes(x = 1, y = msrp)) +
geom_boxplot()
# Create plot of city_mpg
cars %>%
ggplot(aes(x = 1, y = city_mpg)) +
geom_boxplot()
# Create plot of width
cars %>%
ggplot(aes(x = width)) +
geom_density()
common_cyl %>%
ggplot(aes(x = hwy_mpg)) +
geom_histogram() +
facet_grid(ncyl ~ suv, labeller = label_both) +
ggtitle("ncyl vs suv")
library("gapminder")
# Create dataset of 2007 data
gap2007 <- filter(gapminder, year==2007)
# Compute groupwise mean and median lifeExp
gap2007 %>%
group_by(continent) %>%
summarize(mean(lifeExp),
median(lifeExp))
# Generate box plots of lifeExp for each continent
gap2007 %>%
ggplot(aes(x = continent, y = lifeExp)) +
geom_boxplot()
# Compute groupwise measures of spread
gap2007 %>%
group_by(continent) %>%
summarize(sd(lifeExp),
IQR(lifeExp),
n())
# Generate overlaid density plots
gap2007 %>%
ggplot(aes(x = lifeExp, fill = continent)) +
geom_density(alpha = 0.3)
gap2007 <- filter(gapminder, year == 2007)
p1 <- gap2007 %>%
filter(continent == "Americas") %>%
ggplot(aes(x = lifeExp)) +
geom_density() +
ggtitle("Life Expectancy in the Americas")
# skewed
p2 <- gap2007 %>%
ggplot(aes(x = pop)) +
geom_density() +
ggtitle("Country-Level Population")
library(gridExtra)
grid.arrange(p1, p2, ncol = 2)
# Compute stats for lifeExp in Americas
gap2007 %>%
filter(continent == "Americas") %>%
summarize(mean(lifeExp),
sd(lifeExp))
# Compute stats for population
gap2007 %>%
summarize(median (pop),
IQR(pop))
# Create density plot of old variable
gap2007 %>%
ggplot(aes(x = pop)) +
geom_density()
# Transform the skewed pop variable
gap2007 <- gap2007 %>%
mutate(log_pop= log(pop))
# Create density plot of new variable
gap2007 %>%
ggplot(aes(x = log_pop)) +
geom_density()
gap2007 <- filter(gapminder, year == 2007)
gap2007 %>%
filter(continent == "Asia") %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
# Filter for Asia, add column indicating outliers
gap_asia <- gap2007 %>%
filter(continent=="Asia") %>%
mutate(is_outlier = lifeExp<50)
# Remove outliers, create box plot of lifeExp
gap_asia %>%
filter(!is_outlier) %>%
ggplot(aes(x = 1, y = lifeExp)) +
geom_boxplot()
url <- "http://s3.amazonaws.com/assets.datacamp.com/production/course_1796/datasets/cars04.csv"
download.file(url, "cars04.csv")
ggplot(cars, aes(x = city_mpg)) +
geom_histogram() +
facet_wrap(~ suv)
library(datasets)
data("mtcars")
# Load package
library("ggplot2")
# Learn data structure
str(cars)
# Create faceted histogram
ggplot(cars, aes(x = city_mpg)) +
geom_histogram() +
facet_wrap(~ suv)
knitr::opts_chunk$set(echo = TRUE)
# Load packages
library("ggplot2")
library("dplyr")
library("openintro")
#download.file(url, "comics.csv")
#install.packages("dplyr")
#install.packages("ggplot2")
#install.packages("gapminder")
#install.packages("gridExtra")
install.packages("openintro")
